第七章 springboot 的数据访问

springboot 对数据访问的 jdbc做了一些自动配置 ，自动配置在org.springframework.boot.autoconfigure.jdbc中，
    另外boot还开启了注解事务的支持（@EnableTransactionManagement)以及 配置了一个jdbcTemplate.
    spring boot 提供了一个初始化数据的功能：放置在类路径下的schema.sql文件会自动用来初始化表结构，放置在类路径下的data.sql文件会自动填充表数据。



spring Data项目，注意是项目，用来解决数据访问问题的。包含了大量的关系型数据库以及非关系型数据库的数据访问解决方案
    spring Data的子项目有JPA，MongoDB，Neo4j,Redis等 https://spring.io/projects/spring-data

    spring Data 通过 Spring Data Commons项目是实现数据访问操作的基本依赖。她让我们在使用关系型或者非关系型数据访问技术时，
    都是用基于spring的统一标准。

    在spring data中，使用 spring data Repository抽象层，极大的减少了我们对数据访问层的代码。其抽象接口是Repository。



springboot jpa

1.springboot jpa 建立数据访问层十分简单，只需要定义一个继承JPaRepository的接口即可。

2.@EnableJpaRepositories 注解来开启Spring Data JPA 的支持。参数用来扫描数据访问层所在包下的数据访问接口的定义。

3.JPA  查询方法
    spring data JPA 支持通过定义在Repository接口中的方法名来定义查询，而方法名是根据实体类的属性名来确定的。(有约束大于配置的含义)
    1 根据属性名查询
        常规查询 关键字 findBy(find/read/readBy/query/queryBy/get/getBy) Like And
        限制结果数量 关键字 top first
    2 使用JPA 的NamedQuery 查询
        spring data jpa 支持使用jpa的NameQuery 来定义查询方法，即一个名称映射一个查询语句
    3 使用@Query查询
        使用参数索引，在@Query注解的接口的方法上实现查询
        使用命名参数，在语句中使用名称来匹配查询参数
        更新查询，支持@Modifying和@Query注解组合来实现更新查询
    4 Specification
           jpa 提供基于准则查询的Criteria查询方式，spring data jpa 提供了一个Specification(规范)接口，我们可以很方便的构建准则查询。

4.JPA 自动配置
    springboot 对于jpa的自动配置放置在 org.springframework.boot.autoconfigure.orm.jpa中
        HibernateJpaAutoConfiguration，springboot 默认jpa 的实现者是hibernate，她依赖于 DataSourceAutoConfiguration。
        JpaProperties， 在进行application.properties配置设置时，jpa的前缀是spring.jpa
        JpaBaseConfiguration，springboot 为我们默认配置了transactionManager，jpaVendorAdapter等bean，其中方法getPackagesToScan则可以自动扫描注解了@Entity的实体类。

5.Spring Data JPA的自动配置
       springboot 对于spring data jpa 的自动配置放置在 org.springframework.boot.autoconfigure.data.jpa中。
       JpaRepositoriesAutoConfiguration 依赖于 HibernateJpaAutoConfiguration 配置
       spring boot 默认开启了对spring Data JPA的支持，无需我们在进行@EnableJpaRepositories配置。
       我们在使用data-jpa时，只需要定义DataSource，实体类和数据访问层，并且需要在使用数据访问的地方注入数据访问层的Bean即可(@Entity)












